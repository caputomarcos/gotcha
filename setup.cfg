[metadata]
name = ttyGotcha
description = GOTCHA - The SSH-TTY control Interface
long_description = file: README.rst
long_description_content_type = text/markdown
author = Marcos Caputo
author_email = caputo.marcos@gmail.com
url = https://github.com/caputomarcos/gotcha
keywords =
    hunter
    security
license_fileszz = LICENSE
classifiers =
    Environment :: Console
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3 :: Only
    Topic :: Security

[options]
zip_safe = False
packages = find:
install_requires =
    altgraph==0.17.3
    bleach==5.0.1
    certifi==2022.9.24
    cffi==1.15.1
    charset-normalizer==2.1.1
    commonmark==0.9.1
    cryptography==38.0.1
    dataclasses==0.6
    docutils==0.19
    future==0.18.2
    idna==3.4
    importlib-metadata==5.0.0
    jaraco.classes==3.2.3
    jeepney==0.8.0
    keyring==23.9.3
    more-itertools==8.14.0
    packaging==21.3
    pkginfo==1.8.3
    psutil==5.9.2
    pycparser==2.21
    pyelftools==0.29
    Pygments==2.13.0
    pyinstaller==5.5
    pyinstaller-hooks-contrib==2022.10
    pyparsing==3.0.8
    readme-renderer==37.2
    requests==2.28.1
    requests-toolbelt==0.10.0
    rfc3986==2.0.0
    rich==12.6.0
    SecretStorage==3.3.3
    six==1.16.0
    staticx==0.13.8
    twine==4.0.1
    urllib3==1.26.12
    webencodings==0.5.1
    zipp==3.9.0
setup_requires =
    setuptools>=30.3.0
    setuptools_scm
test_requires =
    pytest>=2.9.1
    coverage<5.0
    pytest-cov
python_requires = >=3.10.7

[options.entry_points]
console_scripts =
    gotcha = gotcha.__main__:main

[aliases]
test=pytest

# PyTest
[tool:pytest]
minversion                                        = 2.9.1
norecursedirs                                     = .venv .vscode
addopts                                           = --cov=gotcha
testpaths                                         = tests
console_output_style                              = progress
python_classes                                    = Test*
python_files                                      = test_*.py
python_functions                                  = test_*
filterwarnings                                    = ignore::DeprecationWarning

# Coverage
[coverage:report]
# show missing lines numbers
show_missing = True
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    # Don't complain if tests don't hit defensive
    # assertion code:
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    # Don't complain about log messages not being tested
    logger\.
    logging\.

# Files to exclude from consideration
omit =
    gotcha/__main__.py
